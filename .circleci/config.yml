# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.5.3-node-browsers
      - image: circleci/postgres:10.5-alpine-postgis
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: quotations_t
    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          name: Restore bundle cache
          key: quotations-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install bundle
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          name: Store bundle cache
          key: quotations-{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle

      - run: bundle exec rake db:create db:schema:load
      - run:
          name: Run RSpec
          command: bundle exec rspec
    deploy:
      machine:
        enabled: true
      working_directory: ~/quotations

      steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
          - "59:f2:e7:5c:1c:4c:68:10:55:e7:fa:f6:25:8e:ee:55"
      - run:
          name: Deploy Prod to Heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "dev" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/dev-quotations.git
               master
              heroku run rake assets:precompile --app dev-quotations
              heroku run rake db:migrate --app dev-quotations
              heroku restart --app dev-quotations
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/prod-quotations.git master
              heroku run rake assets:precompile --app prod-quotations
              heroku run rake db:migrate --app prod-quotations
              heroku restart --app prod-quotations
            else
              CIRCLECI=true
            fi
    workflows:
      version: 2
      build-and-deploy:
        jobs:
        - build
        - deploy:
            requires:
            - build
            filters:
              branches:
                only:
                - dev
                - master
